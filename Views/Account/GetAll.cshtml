@model IEnumerable<MiddleTestAuthetication.Models.Account>
@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.EntityFramework;
@using MiddleTestAuthetication.Models;
@using MiddleTestAuthetication.Util

@{
    ViewBag.Title = "GetAll";
    var userManager = ViewData["userManager"] as UserManager<Account>;
    var listRole = ViewData["roleList"] as List<Role>;
}

<h2>GetAll</h2>

<p>
    @Html.ActionLink("Create New", "AddAccount")
</p>
@using (Ajax.BeginForm("ChangeRoleAjax", "Accounts",
new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "GET",
    OnFailure = "searchFailed",
    LoadingElementId = "ajax-loader",
    UpdateTargetId = "result",
}, new { @id = "roleForm" }))
{
    <div style="margin:10px">
        <input type="hidden" name="roleIds" value="" />
        Change all checked items
        <select name="roleToChange">
            <option value="_">Choose role</option>
            @foreach (var role in listRole)
            {
                <option value="@role.Id">@role.Name</option>
            }
        </select>
        <button>Apply</button>
    </div>
}
@using (Ajax.BeginForm("DeleleRolesAjax", "Accounts",
new AjaxOptions
{
    InsertionMode = InsertionMode.Replace,
    HttpMethod = "GET",
    OnFailure = "searchFailed",
    LoadingElementId = "ajax-loader",
    UpdateTargetId = "result",
}, new { @id = "roleFormDelete" }))
{
    <div style="margin:10px">
        <input type="hidden" name="roleIdsToDelete" value="" />
        <button>Delete User's Roles'</button>
    </div>
}
<div id="result">
    <table class="table">
        <tr>
            <th>
                <input type="checkbox" name="checkAll" class="checkbox-item" id="checkAll" />
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>Roles</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" name="checkItem" class="checkbox-item" value="@item.Id" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @{
                        var stringStatus = ConvertAll.ConvertIntStatusToString(item.Status);
                    }
                    @stringStatus
                </td>
                <td>
                    @{
                        var roles = userManager.GetRoles(@item.Id);
                    }
                    @string.Join(", ", roles)
                </td>
            </tr>
        }
    </table>
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.addEventListener('click', function (e) {
            if (e.target && e.target.id == 'checkAll') {
                var checkboxes = document.querySelectorAll('input[name=checkItem]');
                for (var i = 0; i < checkboxes.length; i++) {
                    checkboxes[i].checked = e.target.checked;
                }
                updateIds();
            } else if (e.target && e.target.classList.contains('checkbox-item')) {
                updateIds();
            }
        })

        function updateIds() {
            var checkBox = document.querySelectorAll('input[name=checkItem]:checked');
            var ids = "";
            for (var i = 0; i < checkBox.length; i++) {
                ids += checkBox[i].value + ","
            }
            document.querySelector('input[name=roleIds]').value = ids;
            document.querySelector('input[name=roleIdsToDelete]').value = ids;
        }
    })
</script>
